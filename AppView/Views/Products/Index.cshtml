@{
    ViewData["Title"] = "Index";
}

<h1>Product</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- Search and Filter -->
<div>
    <label for="searchKeyword">Search: </label>
    <input type="text" id="searchKeyword" placeholder="Search products..." />
    <label for="categoryFilter">Category: </label>
    <select id="categoryFilter">
    </select>
    <button id="applyFilter">Apply Filter</button>
</div>

<!-- Table to display products -->
<table class="table" id="productTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>Tên</th>
            <th>Giá</th>
            <th>Tên Loại</th>
            <th>Ngày nhập</th>
            <th>Chức năng</th>
        </tr>
    </thead>
    <tbody id="productTableBody">
        <!-- Data will be populated here by JavaScript -->
    </tbody>
</table>

<!-- Confirmation Dialog -->
<div id="confirmDeleteDialog" class="confirmation-dialog" style="display:none">
    <div class="dialog-content">
        <p>Are you sure you want to delete this product?</p>
        <button id="confirmDeleteBtn">Yes</button>
        <button id="cancelDeleteBtn">No</button>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Add AJAX to fetch data from API -->
<script>
    $(document).ready(function () {
        var categoryDropdown = $('#categoryFilter');
        $.ajax({
                    url: 'https://localhost:7138/api/ProductCategories',
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                if (response.status === 200) {
                    var categories = response.data;
                    categoryDropdown.empty(); // Xóa các option cũ

                    // Thêm một option mặc định
                    categoryDropdown.append('<option value="default">Select Category</option>');

                    // Thêm các category vào dropdown
                    categories.forEach(function(category) {
                        categoryDropdown.append('<option>' + category.name + '</option>');
                    });
                } else {
                    alert('Failed to load categories');
                }
            },
            error: function(xhr, status, error) {
                alert('Error fetching categories: ' + error);
            }
        });
        function fetchProducts(keyword = '', category = '') {
            $.ajax({
                url: 'https://localhost:7138/api/ProductDetails',
                type: 'GET',
                dataType: 'json',
                data: { keyword: keyword, category: category }, // Pass keyword and category as parameters
                success: function (response) {
                    if (response.status === 200) {
                        var products = response.data;
                        var tableBody = $('#productTableBody');
                        tableBody.empty(); // Clear existing table rows

                        // Loop through each product and create a new table row
                        products.forEach(function (product) {
                            var row = `<tr>
                                <td id="productId" value=${product.product_id}>${product.product_id}</td>
                                <td>${product.product_name}</td>
                                <td>${product.product_price}</td>
                                <td>${product.category}</td>
                                <td>${new Date(product.import_day).toLocaleString()}</td>
                                <input type="hidden" id="categoryId" value=${product.category_id} />
                                <td>
                                    <a href="/Products/Edit?productId=${product.product_id}&categoryId=${product.category_id}">Edit</a> |
                                    <a href="#" class="deleteProduct" data-product-id="${product.product_id}" data-category-id="${product.category_id}">Delete</a>
                                </td>
                            </tr>`;
                            tableBody.append(row); // Add the row to the table
                        });
                    } else {
                        alert('Failed to load product data');
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error fetching data: ' + error);
                }
            });
        }

        // Fetch products initially without filters
        fetchProducts();

        // Handle Filter Button Click
        $('#applyFilter').on('click', function () {
            var keyword = $('#searchKeyword').val();
            var category = $('#categoryFilter').val();
            fetchProducts(keyword, category); // Call fetchProducts with filters
        });

        // Handle Delete action
        $(document).on('click', '.deleteProduct', function (e) {
            e.preventDefault(); // Prevent the default link behavior

            // Get product ID and category ID from the clicked link
            var productId = $(this).data('product-id');
            var categoryId = $(this).data('category-id');

            // Show the confirmation dialog
            $('#confirmDeleteDialog').show();

            // Handle "Yes" button click
            $('#confirmDeleteBtn').off('click').on('click', function () {
                // Call the delete API
                $.ajax({
                    url: `https://localhost:7138/api/ProductDetails?productId=${productId}&categoryId=${categoryId}`,
                    type: 'DELETE',
                    success: function (response) {
                        if (response.status === 200) {
                            // Hide the confirmation dialog and reload the table
                            $('#confirmDeleteDialog').hide();
                            alert('Product deleted successfully');
                            fetchProducts(); // Reload the table after deletion
                        } else {
                            alert('Failed to delete product');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Error deleting product: ' + error);
                    }
                });
            });

            // Handle "No" button click (close the dialog)
            $('#cancelDeleteBtn').off('click').on('click', function () {
                $('#confirmDeleteDialog').hide();
            });
        });
    });
</script>

<style>
    .confirmation-dialog {
        display: none; /* Hide the dialog by default */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .dialog-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        width: 300px;
    }

        .dialog-content button {
            margin: 10px;
            padding: 8px 16px;
            cursor: pointer;
        }

            .dialog-content button:hover {
                background-color: #f0f0f0;
            }
</style>
